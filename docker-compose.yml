services:
  backend:
    container_name: 'backend'
    build: ./backend
    image: '${BACKEND_IMAGE}'
    environment:
      - MONGO_URI=${MONGO_URI}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRATION=${JWT_ACCESS_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
    ports:
      - "8000:8000"
    depends_on:
      - mongo
      - redis
    networks:
      - chat-network
    restart: always  

  mongo:
    container_name: 'db'
    image: mongo:latest
    volumes:
      - ./docker/mongodb:/data/db
    networks:
      - chat-network
    restart: always

  redis:
    container_name: 'redis'
    image: redis
    ports:
      - "27017:27017"
    networks:
      - chat-network
    restart: always

  worker:
    container_name: 'worker'
    build: ./backend
    environment:
      - MONGO_URI=${MONGO_URI}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    command: ["node", "worker.js"]
    depends_on:
      - mongo
      - redis
    networks:
      - chat-network
  
  frontend:
    container_name: 'frontend'
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - mongo
      - redis
      - worker
    volumes:
      - ./frontend:/frontend/dist/
    networks:
      - chat-network
    restart: always

    
networks:
  chat-network:
    driver: bridge

